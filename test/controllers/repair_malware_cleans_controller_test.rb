require 'test_helper'

class RepairMalwareCleansControllerTest < ActionDispatch::IntegrationTest
  setup do
    @repair_malware_clean = repair_malware_cleans(:one)
  end

  test "should get index" do
    get repair_malware_cleans_url
    assert_response :success
  end

  test "should get new" do
    get new_repair_malware_clean_url
    assert_response :success
  end

  test "should create repair_malware_clean" do
    assert_difference('RepairMalwareClean.count') do
      post repair_malware_cleans_url, params: { repair_malware_clean: { completed: @repair_malware_clean.completed, details: @repair_malware_clean.details, name: @repair_malware_clean.name, removed: @repair_malware_clean.removed } }
    end

    assert_redirected_to repair_malware_clean_url(RepairMalwareClean.last)
  end

  test "should show repair_malware_clean" do
    get repair_malware_clean_url(@repair_malware_clean)
    assert_response :success
  end

  test "should get edit" do
    get edit_repair_malware_clean_url(@repair_malware_clean)
    assert_response :success
  end

  test "should update repair_malware_clean" do
    patch repair_malware_clean_url(@repair_malware_clean), params: { repair_malware_clean: { completed: @repair_malware_clean.completed, details: @repair_malware_clean.details, name: @repair_malware_clean.name, removed: @repair_malware_clean.removed } }
    assert_redirected_to repair_malware_clean_url(@repair_malware_clean)
  end

  test "should destroy repair_malware_clean" do
    assert_difference('RepairMalwareClean.count', -1) do
      delete repair_malware_clean_url(@repair_malware_clean)
    end

    assert_redirected_to repair_malware_cleans_url
  end
end
