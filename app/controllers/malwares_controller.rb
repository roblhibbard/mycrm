class MalwaresController < ApplicationController
  before_action :set_malwares
  before_action :set_malware, only: [:show, :edit, :update, :destroy]

  # GET repairs/1/malwares
  def index
    @malwares = @repair.malwares
  end

  # GET repairs/1/malwares/1
  def show
  end

  # GET repairs/1/malwares/new
  def new
    @malware = @repair.malwares.build
  end

  # GET repairs/1/malwares/1/edit
  def edit
  end

  # POST repairs/1/malwares
  def create
    @malware = @repair.malwares.build(malware_params)

    if @malware.save
      redirect_to([@malware.repair, @malware], notice: 'Malware was successfully created.')
    else
      render action: 'new'
    end
  end

  # PUT repairs/1/malwares/1
  def update
    if @malware.update_attributes(malware_params)
      redirect_to([@malware.repair, @malware], notice: 'Malware was successfully updated.')
    else
      render action: 'edit'
    end
  end

  # DELETE repairs/1/malwares/1
  def destroy
    @malware.destroy

    redirect_to repair_malwares_url(@repair)
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_malwares
      @repair = Repair.find(params[:repair_id])
    end

    def set_malware
      @malware = @repair.malwares.find(params[:id])
    end

    # Only allow a trusted parameter "white list" through.
    def malware_params
      params.require(:malware).permit(:jrt, :hitmanpro, :adwcleaner, :malwarebytes, :virus)
    end
end
